@{
    ViewData["Title"] = "Home Page";
}
<link href="~/css/openlayers/ol.css" rel="stylesheet" type="text/css" />
<style>
    
    html,
    body,
    .map {
        height: 100%;
        width: 100%;
        padding: 0px;
        margin: 0px;
    }
    .map {
        height: 800px;
    }

    /* Map popup */

    .ol-popup {
        position: absolute;
        background-color: white;
        box-shadow: 0 1px 4px rgba(0, 0, 0, 0.2);
        padding: 15px;
        border-radius: 10px;
        border: 1px solid #cccccc;
        bottom: 12px;
        left: -50px;
        min-width: 280px;
    }

        .ol-popup:after,
        .ol-popup:before {
            top: 100%;
            border: solid transparent;
            content: " ";
            height: 0;
            width: 0;
            position: absolute;
            pointer-events: none;
        }

        .ol-popup:after {
            border-top-color: white;
            border-width: 10px;
            left: 48px;
            margin-left: -10px;
        }

        .ol-popup:before {
            border-top-color: #cccccc;
            border-width: 11px;
            left: 48px;
            margin-left: -11px;
        }
</style>
<script src="~/lib/openlayers/ol.js"></script>

<div id="map" class="map"></div>
<div id="popup" class="ol-popup">
    <div id="popup-content"></div>
</div>

@section Scripts{
    <script src="~/js/e-poles.js" asp-append-version="true"></script>
    <script>
        var _form = new EPoles();
        $(document).ready(function () {
            _form.getUrl = '@Url.Action("GetAllPoles")';
            _form.init();
        });
    </script>
    <script type="text/javascript">

                                                                        //document.addEventListener("DOMContentLoaded", function () {
                                                                        //    var iconFeature1 = new ol.Feature({
                                                                        //        geometry: new ol.geom.Point(ol.proj.fromLonLat([-0.1526069, 51.4790309]),),
                                                                        //        name: 'Somewhere',
                                                                        //    });

                                                                        //    var iconFeature2 = new ol.Feature({
                                                                        //        geometry: new ol.geom.Point(ol.proj.fromLonLat([-0.1426069, 51.4840309])),
                                                                        //        name: 'Somewhere else'
                                                                        //    });

                                                                        //    // specific style for that one point
                                                                        //    iconFeature2.setStyle(new ol.style.Style({
                                                                        //        image: new ol.style.Icon({
                                                                        //            anchor: [0.5, 46],
                                                                        //            anchorXUnits: 'fraction',
                                                                        //            anchorYUnits: 'pixels',
                                                                        //            src: 'https://unpkg.com/leaflet@1.3.3/dist/images/marker-icon-2x.png',
                                                                        //        })
                                                                        //    }));

                                                                        //    const iconLayerSource = new ol.source.Vector({
                                                                        //        features: [iconFeature1, iconFeature2]
                                                                        //    });

                                                                        //    const iconLayer = new ol.layer.Vector({
                                                                        //        source: iconLayerSource,
                                                                        //        // style for all elements on a layer
                                                                        //        style: new ol.style.Style({
                                                                        //            image: new ol.style.Icon({
                                                                        //                anchor: [0.5, 46],
                                                                        //                anchorXUnits: 'fraction',
                                                                        //                anchorYUnits: 'pixels',
                                                                        //                src: 'https://unpkg.com/leaflet@1.3.3/dist/images/marker-icon-2x.png'
                                                                        //            })
                                                                        //        })
                                                                        //    });

                                                                        //    const map = new ol.Map({
                                                                        //        target: 'map',
                                                                        //        layers: [
                                                                        //            new ol.layer.Tile({
                                                                        //                source: new ol.source.OSM(),
                                                                        //            }),
                                                                        //            iconLayer
                                                                        //        ],
                                                                        //        view: new ol.View({
                                                                        //            center: ol.proj.fromLonLat([-0.1526069, 51.4790309]),
                                                                        //            zoom: 14
                                                                        //        })
                                                                        //    });


                                                                        //});

        /*
         var mymap = L.map('latlongmap');
            var mmr = L.marker([0, 0]);
            mmr.bindPopup('0,0');
            mmr.addTo(mymap);
            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png?{foo}', {
                foo: 'bar',
                attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a>'
            }).addTo(mymap);

            mymap.on('click', onMapClick);

            sm(0, 0, 2)
            function isll(num) {
                var val = parseFloat(num);
                if (!isNaN(val) && val <= 90 && val >= -90)
                    return true;
                else
                    return false;
            }

            function onMapClick(e) {
                mmr.setLatLng(e.latlng);
                setui(e.latlng.lat, e.latlng.lng, mymap.getZoom());
            }

            function dec2dms(e, t) {
                document.getElementById("dms-lat").innerHTML = getdms(e, !0), document.getElementById("dms-lng").innerHTML = getdms(t, !1)
            }
            function getdms(e, t) {
                var n = 0, m = 0, l = 0, a = "X";
                return a = t && 0 > e ? "S" : !t && 0 > e ? "W" : t ? "N" : "E", d = Math.abs(e), n = Math.floor(d), l = 3600 * (d - n), m = Math.floor(l / 60), l = Math.round(1e4 * (l - 60 * m)) / 1e4, n + "&deg; " + m + "' " + l + "'' " + a
            }

            function sm(lt, ln, zm) {
                setui(lt, ln, zm);
                mmr.setLatLng(L.latLng(lt, ln));
                mymap.setView([lt, ln], zm);
            }

            function setui(lt, ln, zm) {
                lt = Number(lt).toFixed(6);
                ln = Number(ln).toFixed(6);
                mmr.setPopupContent(lt + ',' + ln).openPopup();
                document.getElementById("lat").value = lt;
                document.getElementById("lng").value = ln;
                document.getElementById("latlngspan").innerHTML = "(" + lt + ", " + ln + ")";
                document.getElementById("coordinatesurl").value = "https://www.latlong.net/c/?lat=" + lt + "&long=" + ln;
                document.getElementById("coordinateslink").innerHTML = '&lt;a href="https://www.latlong.net/c/?lat=' + lt + "&amp;long=" + ln + '" target="_blank"&gt;(' + lt + ", " + ln + ")&lt;/a&gt;";
                dec2dms(lt, ln);
                document.getElementById('latlongmape').src = 'https://www.google.com/maps/embed/v1/view?key=AIzaSyALrSTy6NpqdhIOUs3IQMfvjh71td2suzY&maptype=satellite&' + 'center=' + lt + ',' + ln + '&zoom=' + zm;
            }
         */
    </script>
}

